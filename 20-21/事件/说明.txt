0.  !事件委托的原理：
    有三个同事预计会在周一收到快递。为签收快递，有两种办法：
    一是三个人在公司门口等快递；
    二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。
    前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即
    使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。
    这里其实还有2层意思的：
    第一，现在委托前台的同事是可以代为签收的，即程序中的现有的dom节点是有事件的；
    第二，新员工也是可以被前台MM代为签收的，即程序中新添加的dom节点也是有事件的。


1.  适合用事件委托的事件：click，mousedown，mouseup，keydown，keyup，keypress。

2.  值得注意的是，mouseover和mouseout虽然也有事件冒泡，但是处理它们的时候需要特别的注意，
因为需要经常计算它们的位置，处理起来不太容易。

3.  不适合的就有很多了，举个例子，mousemove，每次都要计算它的位置，非常不好把控，在不如说focus，blur之类的，
本身就没用冒泡的特性，自然就不能用事件委托了。
